{"version":3,"sources":["images/laptop.png","functions/user.js","components/cards/ProductCardInCheckout.js","pages/Cart.js"],"names":["userCart","cart","authtoken","a","axios","post","process","headers","getUserCart","get","emptyUserCart","delete","saveUserAddress","address","applyCoupon","coupon","createOrder","stripeResponse","createCashOrderForUser","COD","couponTrueOrFalse","couponApplied","getUserOrders","getWishList","addToWishList","productId","removeWishList","put","ProductCardInCheckout","p","dispatch","useDispatch","style","width","height","objectFit","images","length","small","url","large","laptop","title","price","brand","onChange","e","console","log","target","value","window","localStorage","getItem","JSON","parse","map","product","i","_id","color","setItem","stringify","type","payload","name","className","filter","c","count","quantity","toast","error","shipping","CheckCircleOutlined","CloseCircleOutlined","CloseOutlined","onClick","pr","Cart","history","useSelector","state","user","scope","to","reduce","currentValue","nextValue","token","then","res","data","ok","push","catch","err","disabled","pathname","from"],"mappings":"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","file":"static/js/40.ebfa1981.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/laptop.db0a6ff4.png\";","import axios from \"axios\";\r\n\r\nexport const userCart = async (cart, authtoken) =>\r\n    await axios.post(\r\n        `${process.env.REACT_APP_API}/user/cart`,\r\n        { cart },\r\n        {\r\n            headers: {\r\n                authtoken,\r\n            },\r\n        }\r\n    );\r\n\r\nexport const getUserCart = async (authtoken) =>\r\n    await axios.get(`${process.env.REACT_APP_API}/user/cart`, {\r\n        headers: {\r\n            authtoken,\r\n        },\r\n    });\r\n\r\nexport const emptyUserCart = async (authtoken) =>\r\n    await axios.delete(`${process.env.REACT_APP_API}/user/cart`, {\r\n        headers: {\r\n            authtoken,\r\n        },\r\n    });\r\n\r\nexport const saveUserAddress = async (authtoken, address) =>\r\n    await axios.post(\r\n        `${process.env.REACT_APP_API}/user/address`,\r\n        { address },\r\n        {\r\n            headers: {\r\n                authtoken,\r\n            },\r\n        }\r\n    );\r\n\r\nexport const applyCoupon = async (authtoken, coupon) =>\r\n    await axios.post(\r\n        `${process.env.REACT_APP_API}/user/cart/coupon`,\r\n        { coupon },\r\n        {\r\n            headers: {\r\n                authtoken,\r\n            },\r\n        }\r\n    );\r\n\r\nexport const createOrder = async (stripeResponse, authtoken) =>\r\n    await axios.post(\r\n        `${process.env.REACT_APP_API}/user/order`,\r\n        { stripeResponse },\r\n        {\r\n            headers: {\r\n                authtoken,\r\n            },\r\n        }\r\n    );\r\nexport const createCashOrderForUser = async (authtoken, COD, couponTrueOrFalse) =>\r\n    await axios.post(\r\n        `${process.env.REACT_APP_API}/user/cash-order`,\r\n        { COD, couponApplied: couponTrueOrFalse },\r\n        {\r\n            headers: {\r\n                authtoken,\r\n            },\r\n        }\r\n    );\r\n\r\nexport const getUserOrders = async (authtoken) =>\r\n    await axios.get(\r\n        `${process.env.REACT_APP_API}/user/orders`,\r\n        {\r\n            headers: {\r\n                authtoken,\r\n            },\r\n        }\r\n    );\r\n\r\nexport const getWishList = async (authtoken) =>\r\n    await axios.get(\r\n        `${process.env.REACT_APP_API}/user/wishlist`,\r\n        {\r\n            headers: {\r\n                authtoken,\r\n            },\r\n        }\r\n    );\r\nexport const addToWishList = async (productId, authtoken) =>\r\n    await axios.post(\r\n        `${process.env.REACT_APP_API}/user/wishlist`,\r\n        { productId },\r\n        {\r\n            headers: {\r\n                authtoken,\r\n            },\r\n        }\r\n    );\r\n\r\nexport const removeWishList = async (productId, authtoken) =>\r\n    await axios.put(\r\n        `${process.env.REACT_APP_API}/user/wishlist/${productId}`,\r\n        {},\r\n        {\r\n            headers: {\r\n                authtoken,\r\n            },\r\n        }\r\n    );","import React from \"react\";\r\nimport ModalImage from \"react-modal-image\";\r\nimport laptop from \"../../images/laptop.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n    CheckCircleOutlined,\r\n    CloseCircleOutlined,\r\n    CloseOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst ProductCardInCheckout = ({ p }) => {\r\n    const colors = [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"];\r\n    let dispatch = useDispatch();\r\n\r\n    const handleColorChange = (e) => {\r\n        console.log(\"color changed\", e.target.value);\r\n\r\n        let cart = [];\r\n        if (typeof window !== \"undefined\") {\r\n            if (localStorage.getItem(\"cart\")) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n            }\r\n\r\n            cart.map((product, i) => {\r\n                if (product._id === p._id) {\r\n                    cart[i].color = e.target.value;\r\n                }\r\n            });\r\n\r\n            //  console.log('cart udpate color', cart)\r\n            localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n            dispatch({\r\n                type: \"ADD_TO_CART\",\r\n                payload: cart,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleQuantityChange = (e) => {\r\n        // console.log(\"available quantity\", p.quantity);\r\n        let count = e.target.value < 1 ? 1 : e.target.value;\r\n\r\n        if (count > p.quantity) {\r\n            toast.error(`Max available quantity: ${p.quantity}`);\r\n            return;\r\n        }\r\n\r\n        let cart = [];\r\n\r\n        if (typeof window !== \"undefined\") {\r\n            if (localStorage.getItem(\"cart\")) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n            }\r\n\r\n            cart.map((product, i) => {\r\n                if (product._id == p._id) {\r\n                    cart[i].count = count;\r\n                }\r\n            });\r\n\r\n            localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n            dispatch({\r\n                type: \"ADD_TO_CART\",\r\n                payload: cart,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleRemove = () => {\r\n        // console.log(p._id, \"to remove\");\r\n        let cart = [];\r\n\r\n        if (typeof window !== \"undefined\") {\r\n            if (localStorage.getItem(\"cart\")) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n            }\r\n            // [1,2,3,4,5]\r\n            // cart.map((product, i) => {\r\n            //     if (product._id === p._id) {\r\n            //         cart.splice(i, 1);\r\n            //     }\r\n            // });\r\n            cart = cart.filter(pr => pr._id !== p._id)\r\n\r\n            localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n            dispatch({\r\n                type: \"ADD_TO_CART\",\r\n                payload: cart,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <tbody>\r\n            <tr>\r\n                <td>\r\n                    <div style={{\r\n                        width: '100px',\r\n                        height: '100%',\r\n                        objectFit: 'cover'\r\n                    }}>\r\n                        {p.images.length ? (\r\n                            <ModalImage small={p.images[0].url} large={p.images[0].url} />\r\n                        ) : (\r\n                            <ModalImage small={laptop} large={laptop} />\r\n                        )}\r\n                    </div>\r\n                </td>\r\n                <td>{p.title}</td>\r\n                <td>${p.price}</td>\r\n                <td>{p.brand}</td>\r\n                <td>\r\n                    <select\r\n                        onChange={handleColorChange}\r\n                        name=\"color\"\r\n                        className=\"form-control\"\r\n                    >\r\n                        {p.color ? (\r\n                            <option value={p.color}>{p.color}</option>\r\n                        ) : (\r\n                            <option>Select</option>\r\n                        )}\r\n                        {colors\r\n                            .filter((c) => c !== p.color)\r\n                            .map((c) => (\r\n                                <option key={c} value={c}>\r\n                                    {c}\r\n                                </option>\r\n                            ))}\r\n                    </select>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={p.count}\r\n                        onChange={handleQuantityChange}\r\n                    />\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    {p.shipping === \"Yes\" ? (\r\n                        <CheckCircleOutlined className=\"text-success\" />\r\n                    ) : (\r\n                        <CloseCircleOutlined className=\"text-danger\" />\r\n                    )}\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <CloseOutlined\r\n                        onClick={handleRemove}\r\n                        className=\"text-danger pointer\"\r\n                    />\r\n                </td>\r\n            </tr>\r\n        </tbody >\r\n    );\r\n};\r\n\r\nexport default ProductCardInCheckout;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProductCardInCheckout from \"../components/cards/ProductCardInCheckout\";\r\nimport { userCart } from \"../functions/user\";\r\n\r\nconst Cart = ({ history }) => {\r\n    const { cart, user } = useSelector((state) => ({ ...state }));\r\n    const dispatch = useDispatch();\r\n\r\n    const getTotal = () => {\r\n        return cart.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        }, 0);\r\n    };\r\n\r\n    const saveOrderToDb = () => {\r\n        //\r\n        console.log('cart', cart)\r\n        userCart(cart, user.token)\r\n            .then(res => {\r\n                if (res.data.ok) {\r\n                    history.push('/checkout')\r\n                }\r\n                console.log(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n\r\n    };\r\n    const saveCashOrderToDb = () => {\r\n\r\n        //\r\n        console.log('cart', cart)\r\n        userCart(cart, user.token)\r\n            .then(res => {\r\n                dispatch({\r\n                    type: 'COD',\r\n                    payload: true\r\n                })\r\n                if (res.data.ok) {\r\n                    history.push('/checkout')\r\n                }\r\n                console.log(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n\r\n    };\r\n\r\n    const showCartItems = () => (\r\n        <table className=\"table table-bordered\">\r\n            <thead className=\"thead-light\">\r\n                <tr>\r\n                    <th scope=\"col\">Image</th>\r\n                    <th scope=\"col\">Title</th>\r\n                    <th scope=\"col\">Price</th>\r\n                    <th scope=\"col\">Brand</th>\r\n                    <th scope=\"col\">Color</th>\r\n                    <th scope=\"col\">Count</th>\r\n                    <th scope=\"col\">Shipping</th>\r\n                    <th scope=\"col\">Remove</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            {cart.map((p) => (\r\n                <ProductCardInCheckout key={p._id} p={p} />\r\n            ))}\r\n        </table>\r\n    );\r\n\r\n    return (\r\n        <div className=\"container-fluid pt-2\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <h4>Cart / {cart.length} Product</h4>\r\n\r\n                    {!cart.length ? (\r\n                        <p>\r\n                            No products in cart. <Link to=\"/shop\">Continue Shopping.</Link>\r\n                        </p>\r\n                    ) : (\r\n                        showCartItems()\r\n                    )}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <h4>Order Summary</h4>\r\n                    <hr />\r\n                    <p>Products</p>\r\n                    {cart.map((c, i) => (\r\n                        <div key={i}>\r\n                            <p>\r\n                                {c.title} x {c.count} = ${c.price * c.count}\r\n                            </p>\r\n                        </div>\r\n                    ))}\r\n                    <hr />\r\n          Total: <b>${getTotal()}</b>\r\n                    <hr />\r\n                    {user ? (\r\n                        <>\r\n                            <button\r\n                                onClick={saveOrderToDb}\r\n                                className=\"btn btn-sm btn-primary mt-2\"\r\n                                disabled={!cart.length}\r\n                            >\r\n                                Proceed to Checkout\r\n                        </button>\r\n\r\n                            <button\r\n                                onClick={saveCashOrderToDb}\r\n                                className=\"btn btn-sm btn-danger mt-2\"\r\n                                disabled={!cart.length}\r\n                            >\r\n                                Pay Cash on Delivery\r\n                                </button>\r\n                        </>\r\n                    ) : (\r\n                        <button className=\"btn btn-sm btn-primary mt-2\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: \"/login\",\r\n                                    state: { from: \"cart\" },\r\n                                }}\r\n                            >\r\n                                Login to Checkout\r\n              </Link>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n"],"sourceRoot":""}